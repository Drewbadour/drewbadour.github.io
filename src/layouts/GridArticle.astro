---
const { index, visibility } = Astro.props;
---

<article data-index={index} data-visibility={visibility}>
	<div class="article-section article-section-slide article-title" data-visibility={visibility}>
		<slot name="title"/>
	</div>

	<div class="article-section article-section-slide article-image" data-visibility={visibility}>
		<slot name="image"/>
	</div>


	<div class="article-section article-section-hide article-description" data-visibility={visibility}>
		<slot name="description"/>
	</div>

	<div class="article-section article-nav" data-visibility={visibility}>
		<slot name="nav">
			<div class="nav-items">
				<div class="nav-item nav-left"/>
				<div class="nav-item nav-right"/>
			</div>
		</slot>
	</div>
</article>


<script>

function getVisibleArticleIndex(articles) {
	for (const article of articles) {
		if (article.dataset.visibility == "visible") {
			return +article.dataset.index;
		}
	}

	return 0;
}

function setSections(articles, className, visibility) {
	let slideSections = articles.getElementsByClassName(className);
	for (const section of slideSections) {
		section.dataset.visibility = visibility;
	}
}

function navClicked(direction) {
	const articles = document.getElementsByTagName('article');
	const visibleIndex = getVisibleArticleIndex(articles);
	const numericDirection = (direction == "left") ? -1 : +1;
	const nextIndex = Math.abs((visibleIndex + numericDirection) % articles.length);

	for (const article of articles) {
		const currentIndex = +article.dataset.index;

		if (numericDirection < 0 && currentIndex == nextIndex) {

			article.dataset.visibility = "visible";
			setSections(article, 'article-section-slide', "visible");
			setSections(article, 'article-section-hide', "visible");

		} else if (article.dataset.index == visibleIndex) {

			if (direction == "left") {
				article.dataset.visibility = "hidden-right";
				setSections(article, 'article-section-slide', "hidden-right");
			} else if (direction == "right") {
				article.dataset.visibility = "hidden-left";
				setSections(article, 'article-section-slide', "hidden-left");
			}

			setSections(article, 'article-section-hide', "hidden");

		} else if (numericDirection > 0 && currentIndex == nextIndex) {

			article.dataset.visibility = "visible";
			setSections(article, 'article-section-slide', "visible");
			setSections(article, 'article-section-hide', "visible");

		} else {
			// Do nothing
		}
	}
}

function navLeftClicked() {
	navClicked("left");
/*
	const articles = document.getElementsByTagName('article');
	let length = articles.length;

	articles[0].dataset.visibility = "visible";
	articles[1].dataset.visibility = "hidden-right";

	setSections(articles[0], 'article-section-slide', "visible");
	setSections(articles[0], 'article-section-hide', "visible");
	setSections(articles[1], 'article-section-slide', "hidden-right");
	setSections(articles[1], 'article-section-hide', "hidden");
	*/
}

function navRightClicked() {
	navClicked("right");
/*
	const articles = document.getElementsByTagName('article');
	let length = articles.length;

	articles[0].dataset.visibility = "hidden-left";
	articles[1].dataset.visibility = "visible";

	setSections(articles[0], 'article-section-slide', "hidden-left");
	setSections(articles[0], 'article-section-hide', "hidden");
	setSections(articles[1], 'article-section-slide', "visible");
	setSections(articles[1], 'article-section-hide', "visible");
	*/
}

const navLeft = document.querySelectorAll('.nav-left');
navLeft.forEach((navItem) => {
	navItem.addEventListener('click', navLeftClicked);
});

const navRight = document.querySelectorAll('.nav-right');
navRight.forEach((navItem) => {
	navItem.addEventListener('click', navRightClicked);
});

</script>


<style>

article {
	position: absolute;
	left: 0;
	top: 0;

	display: grid;
	grid-template-columns: 1fr 1fr 1fr;
	grid-template-rows: 3fr 1fr;
	grid-auto-flow: row;

	width: 100%;
	height: 100%;
}

article {
	
}

article[data-visibility="hidden-left"] {
	-webkit-transition: transform 0s 750ms;
	transition: transform 0s 750ms;

	-webkit-transform: translateX(-100vw);
	transform: translateX(-100vw);
}

article[data-visibility="hidden"],
article[data-visibility="hidden-right"] {
	-webkit-transition: transform 0s 750ms;
	transition: transform 0s 750ms;

	-webkit-transform: translateX(100vw);
	transform: translateX(100vw);
}

article[data-visibility="visible"] {
	-webkit-transform: translateX(0);
	transform: translateX(0);
}

.article-section-slide,
.article-section-hide {
	-webkit-transition: transform 750ms ease;
	transition: transform 750ms ease;
}

.article-section-slide[data-visibility="hidden-left"] {
	-webkit-transform: translateX(-100vw);
	transform: translateX(-100vw);
}

.article-section-slide[data-visibility="hidden"],
.article-section-slide[data-visibility="hidden-right"] {
	-webkit-transform: translateX(100vw);
	transform: translateX(100vw);
}

.article-section-slide[data-visibility="visible"] {
	-webkit-transform: translateX(0);
	transform: translateX(0);
}

.article-section-hide[data-visibility="hidden"] {
	-webkit-transform: translateY(100lvh);
	transform: translateY(100lvh);
}

.article-section-hide[data-visibility="visible"] {
	-webkit-transform: translateY(0);
	transform: translateY(0);
}

.article-section {
	height: 100%;

	overflow: hidden;
}

.article-title {
	border-top: 1px solid var(--backgroundLight);
	border-bottom: 1px solid var(--backgroundLight);

	padding-left: 1rem;
	padding-right: 1rem;

	font-size: 1.5rem;

	container-type: inline-size;
	container-name: title;


	#name {
		margin-top: 1rem;
		margin-bottom: 0;

		font-size: 3rem;
		font-weight: 900;
	}
}

.article-image {
	grid-column: span 2;

/*	background-color: black;*/
/*	background-image: url("/src/assets/photo-download.jpg");*/
/*	background-size: cover;*/

	border-top: 1px solid var(--backgroundLight);
	border-bottom: 1px solid var(--backgroundLight);
	border-left: 1px solid var(--backgroundLight);

	overflow: hidden;

/*		padding: 1rem;*/

	.article-image-wrapper {
/*			display: flex;*/

/*			justify-content: center;*/
/*			align-items: center;*/

/*			min-width: 100%;*/

/*			width: 100%;*/
/*			height: 100%;*/

/*			position: relative;*/
		overflow: hidden;
	}
}

.article-image img {
/*		flex-grow: 1;*/
/*		width: 80%;*/
/*		height: none;*/
/*		max-height: 100%;*/
/*		object-fit: cover;*/
/*	object-fit: cover;*/
/*		min-width: 100%;*/
/*		max-width: none;*/
/*		min-height: 100%;*/

/*		vertical-align: middle;*/
/*		display: inline-block;*/
}

.article-description {
	display: flex;
	justify-content: start;
	align-items: center;

	grid-column: span 2;

/*	border-top: 1px solid var(--backgroundLight);*/

	font-size: 3rem;
	font-weight: 600;

	container-type: inline-size;
	container-name: description;
}

.article-nav {
	display: flex;
	justify-content: center;
	align-items: center;

/*	border-top: 1px solid var(--backgroundLight);*/
	border-left: 1px solid var(--backgroundLight);

	font-size: 3rem;
	font-weight: 600;
	text-transform: uppercase;
}


.nav-items {
	display: grid;
	grid-template-columns: 1fr 1fr;
	grid-template-rows: auto;

	width: 100%;
	height: 100%;


	.nav-item {
		display: flex;
		justify-content: center;
		align-items: center;

		transition: color 250ms ease-out;
	}

	.nav-left:before {
		display: inline-block;
		content: "\f060";

		font-family: FontAwesome;

		padding-right: 1rem;
	}

	.nav-left:hover {
		color: var(--gold);
	}

	.nav-right {
		border-left: 1px solid var(--backgroundLight);
	}

	.nav-right:after {
		display: inline-block;
		content: "\f061";

		font-family: FontAwesome;

		padding-left: 1rem;
	}

	.nav-right:hover {
		color: var(--gold);
	}
}

</style>
