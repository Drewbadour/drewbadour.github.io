---
import SkillItem from "./SkillItem.astro"
import WorkReference from "./WorkReference.astro"

interface Props {
	startDate: string;
	endDate: string;
	blurb: string;
	skills: Array<string>;
	work: Array<Object>;
}

// const { anchor, startDate, endDate, role, company, href, blurb, skills, work } = Astro.props;
const { startDate, endDate, blurb, skills, work } = Astro.props;
---

<div class="experience">
	<h4 class="date text-dark">{startDate} â€” {endDate}</h4>

	<div class="blurb">{blurb}</div>

	<div class="work-links">
		{ work && work.map((work) =>
			<a class="work-link" href={work.href}>
				<span class="work-text">{work.text}</span>
				<i class="fa fa-fw fa-angle-double-right" aria-hidden="true"/>
			</a>
		)}
	</div>

	<div style="height: 100%;"/>

	<!--
	<div class="skills">
		{ /*skills && skills.map((skill) =>
			<div class="skill fade-item">
				{skill}
			</div>
		)*/}
	</div>
	-->
</div>


<style>

.experience {
	padding: 1em;
}



h4 {
	margin: 0.25em 0 0.25em 0.1em;
}



h3 {
	margin: 0.2em 0 0.6em 0;
}

.role {
/*	font-family: "Rasa", serif;*/
	font-size: 1.5em;
	line-height: 1em;

	.line {
		text-decoration: underline;
		text-decoration-color: var(--gold);
	}
}



.blurb {
	margin: 0em 0em 1em 0em;
}



.work-links {
	margin: 1em 0;
}

.work-link {
	display: block;

/*	font-family: "Rasa", serif;*/
	text-decoration: none;

	margin: 0.25em 0;
}

.work-text {
	text-decoration: underline;
	text-decoration-color: var(--gold);
}



.skills {
	margin: 1em 0;
}

.skills .skill {
	/* This has to be here to properly animate */
	transition: opacity 0.2s;
}

.skills:has(.skill:hover) .skill:not(:hover) {
	opacity: 0.2;
}

.skill {
	display: inline-block;

	padding: 0 0.5em;
	margin: 0.25em 0.1em;

	color: var(--gold);
	background-color: var(--goldTransparent);

/*	font-family: "Rasa", serif;*/
	line-height: 2em;

	border-radius: 0.5em;
}



@media (prefers-reduced-motion) {
	.skills:has(.skill:hover) .skill:not(:hover) {
		opacity: 1;
	}
}

@media (prefers-reduced-transparency) {
	.skill {
		background-color: rgb(47, 41, 28);
	}

	.skills:has(.skill:hover) .skill:not(:hover) {
		opacity: 1;
	}
}

</style>